imports:
    - { resource: parameters.yml }
    - { resource: security.yml }
    - { resource: services.yml }
    - { resource: "@JarryUbuBundle/Resources/config/admin.yml" }
    - { resource: "fosrest.yml" }

# Put parameters here that don't need to change on each machine where the app is deployed
# http://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: ~
    btnCss: "mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-color--indigo-100 mdl-color-text--purple-400 table_btn"
    btn2Css: "mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-color--indigo-100 mdl-color-text--purple-400 table_btn2"
    btn3Css: "mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-color--purple-400 mdl-color-text--indigo-100 table_btn3"
    titreCss: "demo-charts mdl-color--purple-900 mdl-color-text--purple-200 mdl-shadow--2dp mdl-cell mdl-cell--12-col mdl-grid center"
    containerCss: "demo-charts fond2 mdl-shadow--2dp mdl-cell mdl-cell--12-col mdl-grid fond2"
    carreClicCss: "mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-color--indigo-100 mdl-color-text--indigo-900 appli_button2"
    carreNewCss: "mdl-button mdl-js-button mdl-button--raised mdl-js-ripple-effect mdl-color--indigo-900 mdl-color-text--indigo-100 appli_button"
    carreTextCss: "adresse_div mdl-color--indigo-100 mdl-color-text--indigo-900"
    navDarkCss: "mdl-menu__item mdl-js-ripple-effect mdl-color--indigo-900 mdl-color-text--purple-100"
    navCss: "mdl-menu__item mdl-js-ripple-effect mdl-color--indigo-100 mdl-color-text--purple-900"

framework:
    #esi:             ~
    translator:      ~
    secret:          "%secret%"
    router:
        resource: "%kernel.root_dir%/config/routing.yml"
        strict_requirements: ~
    form:            ~
    csrf_protection: ~
    validation:      { enable_annotations: true }
    #serializer:      { enable_annotations: true }
    templating:
        engines: ['twig']
        #assets_version: SomeVersionScheme
    default_locale:  "%locale%"
    trusted_hosts:   ~
    trusted_proxies: ~
    session:
        # handler_id set to null will use default session handler from php.ini
        handler_id:  ~
        gc_probability: 0
    fragments:       ~
    http_method_override: true

# Twig Configuration
twig:
    debug:            "%kernel.debug%"
    strict_variables: "%kernel.debug%"

# Doctrine Configuration
doctrine:
    dbal:
        driver:   pdo_mysql
        host:     "%database_host%"
        port:     "%database_port%"
        dbname:   "%database_name%"
        user:     "%database_user%"
        password: "%database_password%"
        charset:  UTF8
        types:
            json: Sonata\Doctrine\Types\JsonType
        # if using pdo_sqlite as your database driver:
        #   1. add the path in parameters.yml
        #     e.g. database_path: "%kernel.root_dir%/data/data.db3"
        #   2. Uncomment database_path in parameters.yml.dist
        #   3. Uncomment next line:
        #     path:     "%database_path%"

    orm:
        auto_generate_proxy_classes: "%kernel.debug%"
        naming_strategy: doctrine.orm.naming_strategy.underscore
        auto_mapping: true

# Swiftmailer Configuration
swiftmailer:
    transport: gmail
    host:      "%mailer_host%"
    username:  "projet.informatique.ubu@gmail.com"
    password:  "uburoipoecimie"
    spool:     { type: memory }

#FOS_User Configuration
fos_user:
    db_driver: orm # other valid values are 'mongodb', 'couchdb' and 'propel'
    firewall_name: main
    user_class: Jarry\UbuBundle\Entity\User
    group:
        group_class: Jarry\UbuBundle\Entity\Group
        group_manager: sonata.user.orm.group_manager
    service:
        user_manager: sonata.user.orm.user_manager
    registration:
        form:
            type: ubu_user_registration
    profile:  # Profile Form (firstname, lastname, etc ...)
        form:
            type:               sonata_user_profile
            handler:            sonata.user.profile.form.handler.default
            name:               sonata_user_profile_form
            validation_groups:  [Profile]
    resetting:
        token_ttl: 86400
        email:
            from_email:
                address:        projet.informatique.ubu@gmail.com
                sender_name:    Bot UBU
        form:
            type:               sonata_user_resetting
            name:               sonata_user_resetting_form
            validation_groups:  [ResetPassword, Default]

# FOS_OAuth_Server Configuration
#fos_oauth_server:
#    db_driver: orm
#    client_class:        AppBundle\Entity\Client
#    access_token_class:  AppBundle\Entity\AccessToken
#    refresh_token_class: AppBundle\Entity\RefreshToken
#    auth_code_class:     AppBundle\Entity\AuthCode


sonata_user:
    security_acl: true
    manager_type: orm
    class:
        user: Jarry\UbuBundle\Entity\User
    profile:  # Profile Form (firstname, lastname, etc ...)
        form:
            type:               sonata_user_profile
            handler:            sonata.user.profile.form.handler.default
            name:               sonata_user_profile_form
            validation_groups:  [Profile]

#Sonata_block Configuration
sonata_block:
    default_contexts: [cms]
    blocks:
        sonata.admin.block.admin_list:
            contexts:   [admin]
        sonata.admin.block.search_result:
            contexts:   [admin]
        sonata.block.service.text:
        sonata.block.service.rss:
        sonata.user.block.menu:    # used to display the menu in profile pages
        sonata.user.block.account: # used to display menu option (login option)
        sonata.block.service.text: # used to if you plan to use Sonata user routes
        sonata.block.service.action:
            
sonata_admin:
    title: UBU Manager
    dashboard:
        blocks:
            -
                position: right
                type: sonata.block.service.text
                settings:
                    content: >
                        <h2>Welcome to the UBU Admin</h2>
                        <p>This is a manager of Production data.</p> <br />
            -
                position: left
                type: sonata.admin.block.admin_list
            -
                position: right
                type: sonata.block.service.rss
    security:
        handler: sonata.admin.security.handler.acl
        # acl security information
        information:
            GUEST:    []
            STAFF:    [EDIT, LIST, CREATE]
            EDITOR:   [EXPORT]
            ADMIN:    [MASTER]
            OWNER:    [OWNER]
        # permissions not related to an object instance and also to be available when objects do not exist
        # the DELETE admin permission means the user is allowed to batch delete objects
        admin_permissions: [CREATE, LIST, DELETE, UNDELETE, EXPORT, MASTER]
        # permission related to the objects
        object_permissions: [VIEW, EDIT, DELETE, UNDELETE, MASTER, OWNER]
